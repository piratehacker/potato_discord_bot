{
  "{\"sourceRoot\":\"F:\\\\Projects\\\\NodeJS\\\\Discord\\\\Potato\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Projects\\\\NodeJS\\\\Discord\\\\Potato\",\"filename\":\"F:\\\\Projects\\\\NodeJS\\\\Discord\\\\Potato\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Projects\\\\NodeJS\\\\Discord\\\\Potato\",\"plugins\":[],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Projects\\NodeJS\\Discord\\Potato\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Projects\\NodeJS\\Discord\\Potato",
      "filename": "F:\\Projects\\NodeJS\\Discord\\Potato\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Projects\\NodeJS\\Discord\\Potato",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Projects\\NodeJS\\Discord\\Potato\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Projects\\NodeJS\\Discord\\Potato\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Projects\\NodeJS\\Discord\\Potato\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import Discord from 'discord.js';\nimport '../config.json';\nvar client = new Discord.Client();\nclient.on('ready', () => {\n  console.log('[D] Bot ready');\n});\nvar currentUsers = [];\nclient.on('message', msg => {\n  if (msg.content == 'p.start') {\n    // User opens menu\n    currentUsers.push(msg.author.id);\n    msg.channel.send(':white_check_mark: Connected!');\n    return;\n  }\n\n  if (currentUsers.indexOf(msg.author.id) != -1) {\n    // User is in menu\n    msg.channel.send('Hello!');\n    return;\n  }\n\n  if (msg.content == 'end') {\n    var index = currentUsers.indexOf(msg.author.id);\n\n    if (index != -1) {\n      currentUsers.splice(index, 1);\n    }\n\n    msg.channel.send('**:wave: Bye!**');\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkRpc2NvcmQiLCJjbGllbnQiLCJDbGllbnQiLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJjdXJyZW50VXNlcnMiLCJtc2ciLCJjb250ZW50IiwicHVzaCIsImF1dGhvciIsImlkIiwiY2hhbm5lbCIsInNlbmQiLCJpbmRleE9mIiwiaW5kZXgiLCJzcGxpY2UiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsWUFBcEI7QUFDQSxPQUFPLGdCQUFQO0FBRUEsSUFBSUMsTUFBTSxHQUFHLElBQUlELE9BQU8sQ0FBQ0UsTUFBWixFQUFiO0FBRUFELE1BQU0sQ0FBQ0UsRUFBUCxDQUFVLE9BQVYsRUFBbUIsTUFBSTtBQUNuQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZUFBWjtBQUNILENBRkQ7QUFJQSxJQUFJQyxZQUFZLEdBQUcsRUFBbkI7QUFFQUwsTUFBTSxDQUFDRSxFQUFQLENBQVUsU0FBVixFQUFzQkksR0FBRCxJQUFPO0FBQ3hCLE1BQUdBLEdBQUcsQ0FBQ0MsT0FBSixJQUFlLFNBQWxCLEVBQTZCO0FBQ3pCO0FBQ0FGLElBQUFBLFlBQVksQ0FBQ0csSUFBYixDQUFrQkYsR0FBRyxDQUFDRyxNQUFKLENBQVdDLEVBQTdCO0FBQ0FKLElBQUFBLEdBQUcsQ0FBQ0ssT0FBSixDQUFZQyxJQUFaLENBQWlCLCtCQUFqQjtBQUNBO0FBQ0g7O0FBRUQsTUFBR1AsWUFBWSxDQUFDUSxPQUFiLENBQXFCUCxHQUFHLENBQUNHLE1BQUosQ0FBV0MsRUFBaEMsS0FBdUMsQ0FBQyxDQUEzQyxFQUE4QztBQUMxQztBQUNBSixJQUFBQSxHQUFHLENBQUNLLE9BQUosQ0FBWUMsSUFBWixDQUFpQixRQUFqQjtBQUNBO0FBQ0g7O0FBRUQsTUFBSU4sR0FBRyxDQUFDQyxPQUFKLElBQWUsS0FBbkIsRUFBMEI7QUFDdEIsUUFBSU8sS0FBSyxHQUFHVCxZQUFZLENBQUNRLE9BQWIsQ0FBcUJQLEdBQUcsQ0FBQ0csTUFBSixDQUFXQyxFQUFoQyxDQUFaOztBQUNBLFFBQUdJLEtBQUssSUFBSSxDQUFDLENBQWIsRUFBZ0I7QUFDWlQsTUFBQUEsWUFBWSxDQUFDVSxNQUFiLENBQW9CRCxLQUFwQixFQUEyQixDQUEzQjtBQUNIOztBQUNEUixJQUFBQSxHQUFHLENBQUNLLE9BQUosQ0FBWUMsSUFBWixDQUFpQixpQkFBakI7QUFDSDtBQUNKLENBckJEIiwic291cmNlUm9vdCI6IkY6XFxQcm9qZWN0c1xcTm9kZUpTXFxEaXNjb3JkXFxQb3RhdG9cXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaXNjb3JkIGZyb20gJ2Rpc2NvcmQuanMnO1xyXG5pbXBvcnQgJy4uL2NvbmZpZy5qc29uJztcclxuXHJcbnZhciBjbGllbnQgPSBuZXcgRGlzY29yZC5DbGllbnQoKTtcclxuXHJcbmNsaWVudC5vbigncmVhZHknLCAoKT0+e1xyXG4gICAgY29uc29sZS5sb2coJ1tEXSBCb3QgcmVhZHknKVxyXG59KTtcclxuXHJcbnZhciBjdXJyZW50VXNlcnMgPSBbXTtcclxuXHJcbmNsaWVudC5vbignbWVzc2FnZScsIChtc2cpPT57XHJcbiAgICBpZihtc2cuY29udGVudCA9PSAncC5zdGFydCcpIHtcclxuICAgICAgICAvLyBVc2VyIG9wZW5zIG1lbnVcclxuICAgICAgICBjdXJyZW50VXNlcnMucHVzaChtc2cuYXV0aG9yLmlkKTtcclxuICAgICAgICBtc2cuY2hhbm5lbC5zZW5kKCc6d2hpdGVfY2hlY2tfbWFyazogQ29ubmVjdGVkIScpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZihjdXJyZW50VXNlcnMuaW5kZXhPZihtc2cuYXV0aG9yLmlkKSAhPSAtMSkge1xyXG4gICAgICAgIC8vIFVzZXIgaXMgaW4gbWVudVxyXG4gICAgICAgIG1zZy5jaGFubmVsLnNlbmQoJ0hlbGxvIScpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKG1zZy5jb250ZW50ID09ICdlbmQnKSB7XHJcbiAgICAgICAgdmFyIGluZGV4ID0gY3VycmVudFVzZXJzLmluZGV4T2YobXNnLmF1dGhvci5pZCk7XHJcbiAgICAgICAgaWYoaW5kZXggIT0gLTEpIHtcclxuICAgICAgICAgICAgY3VycmVudFVzZXJzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG1zZy5jaGFubmVsLnNlbmQoJyoqOndhdmU6IEJ5ZSEqKicpO1xyXG4gICAgfVxyXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Discord",
        "client",
        "Client",
        "on",
        "console",
        "log",
        "currentUsers",
        "msg",
        "content",
        "push",
        "author",
        "id",
        "channel",
        "send",
        "indexOf",
        "index",
        "splice"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,OAAO,gBAAP;AAEA,IAAIC,MAAM,GAAG,IAAID,OAAO,CAACE,MAAZ,EAAb;AAEAD,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,MAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,CAFD;AAIA,IAAIC,YAAY,GAAG,EAAnB;AAEAL,MAAM,CAACE,EAAP,CAAU,SAAV,EAAsBI,GAAD,IAAO;AACxB,MAAGA,GAAG,CAACC,OAAJ,IAAe,SAAlB,EAA6B;AACzB;AACAF,IAAAA,YAAY,CAACG,IAAb,CAAkBF,GAAG,CAACG,MAAJ,CAAWC,EAA7B;AACAJ,IAAAA,GAAG,CAACK,OAAJ,CAAYC,IAAZ,CAAiB,+BAAjB;AACA;AACH;;AAED,MAAGP,YAAY,CAACQ,OAAb,CAAqBP,GAAG,CAACG,MAAJ,CAAWC,EAAhC,KAAuC,CAAC,CAA3C,EAA8C;AAC1C;AACAJ,IAAAA,GAAG,CAACK,OAAJ,CAAYC,IAAZ,CAAiB,QAAjB;AACA;AACH;;AAED,MAAIN,GAAG,CAACC,OAAJ,IAAe,KAAnB,EAA0B;AACtB,QAAIO,KAAK,GAAGT,YAAY,CAACQ,OAAb,CAAqBP,GAAG,CAACG,MAAJ,CAAWC,EAAhC,CAAZ;;AACA,QAAGI,KAAK,IAAI,CAAC,CAAb,EAAgB;AACZT,MAAAA,YAAY,CAACU,MAAb,CAAoBD,KAApB,EAA2B,CAA3B;AACH;;AACDR,IAAAA,GAAG,CAACK,OAAJ,CAAYC,IAAZ,CAAiB,iBAAjB;AACH;AACJ,CArBD",
      "sourceRoot": "F:\\Projects\\NodeJS\\Discord\\Potato\\src",
      "sourcesContent": [
        "import Discord from 'discord.js';\r\nimport '../config.json';\r\n\r\nvar client = new Discord.Client();\r\n\r\nclient.on('ready', ()=>{\r\n    console.log('[D] Bot ready')\r\n});\r\n\r\nvar currentUsers = [];\r\n\r\nclient.on('message', (msg)=>{\r\n    if(msg.content == 'p.start') {\r\n        // User opens menu\r\n        currentUsers.push(msg.author.id);\r\n        msg.channel.send(':white_check_mark: Connected!');\r\n        return;\r\n    }\r\n\r\n    if(currentUsers.indexOf(msg.author.id) != -1) {\r\n        // User is in menu\r\n        msg.channel.send('Hello!');\r\n        return;\r\n    }\r\n    \r\n    if (msg.content == 'end') {\r\n        var index = currentUsers.indexOf(msg.author.id);\r\n        if(index != -1) {\r\n            currentUsers.splice(index, 1);\r\n        }\r\n        msg.channel.send('**:wave: Bye!**');\r\n    }\r\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1571857065031
  }
}